% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isNamespace.R
\name{isNamespace}
\alias{isNamespace}
\title{isNamespace}
\usage{
isNamespace(ns)
}
\arguments{
\item{ns}{An object.}
}
\description{
A namespace is the environment that contains all the functions defined in a package.
\code{isNamespace()} checks if an environment is a namespace, and always returns \code{FALSE}
Note that \code{isNamespace()} never returns \code{TRUE} when \code{ns} is a string, even if it is the name of a namespace.
}
\details{
\code{isNamespace()} seems to check if \code{ns} is an environment that contains a \code{'.__NAMESPACE__.'}
object that is an environment and contains a list with a \code{spec} character
element of non zero length (see example). Additionally, some packages such as
\code{base} don't contain a \code{'.__NAMESPACE__.'} object and seem to be special cased.

Indeed \code{isNamespace(.BaseNamespaceEnv)} is \code{TRUE} but \code{isNamespace(rlang::env_clone(.BaseNamespaceEnv))} is \code{FALSE}
}
\examples{
ns <- asNamespace("stats")
isNamespace(ns) # TRUE
isNamespace(new.env()) # FALSE
isNamespace("base") # FALSE

as.list(ns[[".__NAMESPACE__."]])

test <- new.env()
test[[".__NAMESPACE__."]] <- as.environment(list(spec = character(1)))
isNamespace(test) # TRUE
}
